<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAFgAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAEoAdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDyGiiimAUUUUAFFFFADqKKKACiiigApaKKACiiloAKKKKAClpKWgAooooAKKKWgBKW
        iigAooooAKKKKACilooASilpKACilpKACiiigApKWigBKKWkoAKKKKAEopaSgAooooASilpKACkpaKAE
        ooooAKKKKAG0U6m0AFFFFABRRRQAUUUUAFFFFABTqKKACiiigApaSloAKKKWgBKWiigAopaKACiiigAp
        aSloAKKWigBKKWigAooooAMUUtFACUUtFACUtFFACUUtJQAUUUUAFJS+lFACUUtJQAUlLRQAlFFFABSU
        tFACUUUUAJRS0lABSUtJQAUUUUAFFFFADaKKKACnU2igAooooAKdTadQAUUUUAFFFFAC0UUUAFLRRQAU
        UUtABRRRQAtFFFABRRS0AFFFLQAlLRRQAUUUtACUUtFACUtFFABRRRQAUlLRQAlFLRQAlJS0UAJRS0lA
        BSUtJQAlLRRQAlFFFACUUtJQAUlLRQAlFFFACUUUUAFFFFADaKdTaACiincUANooooAKdRRQAUUUUAFL
        RRQAUUUtABRRRQAtFFFABS0UUAFLSUtABRRS0AFFFLQAlLRRQAUU6igAoopaAEopaKAG4paWigBKKKKA
        G0Yp1FADaSn02gBKKKKAEopaSgBKKWkoAKSlooASiiigBKKWkoASilpKACkpaSgAooooAKbTqKAG0UU6
        gBtFBooAdRRRQAUUUUALRRRQAUtFFABS0lLQAUUUUALRRS0AFFFFAC0UUUALRRTqACiiloASloooAKKK
        KACiilxQAlFFFABRSmkoAKSlooASilpKAG0U6m0AJRS0lABSUtJQAlFLSUAJRS0lABSUtFACUlLRQAlF
        FFACUUUUAFFFFADadRRQAUUUUAFFFFABRRS0AFFFFAC0UUUALRRRQAUtFFABS0UUAFLRRQAUtFFADqKK
        WgAopMUtABRRTqACiiloASilooASiiloASilpKAG0U7FNoAKKKKAEooNFADaKKKAEpKWigBKSlooASkp
        aKAEooooASiiigApKWkoASilpKACiiigAoptOoAKKKKACiiigApaSloAKWkpaACiiigBRRRRQAtFFLQA
        UUUtABRRS0AFOptOoAKWiigAoop1ABS0UUAFFLRQAlLRRQAYpKWigBKKWkoASilpKAG0U6m0AFFFFACU
        2nU2gApKWkoASilpKAEooooASiiigApKWkoAKSlpKACkpaKAEooooAbTqKKACiiigAooooAWiiigApaS
        loAKWkpaAAUUUtABS0lLQAUtJS0AFLSUtADqQUtIKAHUUUUAFOopaBBS0lLQMKKPWloEJ60UtHFABRRR
        QAlFLzSUAJRS0lACUUppKBjaKKKAEopaSgBtFFFACUlLSUAFJS0lABSUtJQAUlLSUAFJS0lABSUtFACU
        UUUAFFFLQAlFFFABRRRQAtFFFABS0lLQAUtJS0AFLSUtABS0lLQAUtJS0ALRRTqACikFLQAtFFFADhS0
        lLQAtFJSigQUtFFABRS0cUAJR60vekoAKSlooAQ0UUUAJSUtJQMKbTjTaACkpaSgBtFFFACUlLSUAFJS
        0lABSUppKACkpaKAEpKWkoAKKKKAEooooAKM0UUAFFFFABRRRQAtFFFABS0lLQAUtJS0AFLSUtABS0lL
        QAUtJS0ALTqbRQAop1JS0AKKSkFPoAKWkpaAFooo9aAFooo9aBBS0lFAC0lLSUAFFFFACUUUlAAaSlpK
        BgabSmkoAKSlpKACmU+m0AJSdqWkoAKKKSgApKWkoAKKKSgAooooASiiigBKKKKACjFFFABRRRQAUUUU
        ALRRRQAUtJS0ALRSUtABS0lFAC0tJS0AFLSUtABS0lLQAopRRRQAtFFFADqKbTqAFpaSloAWikooELRR
        RQAcUUUUAFJS0lABSUUUAFJRRQMKbRRQAnFIaWigBtFFFACUlLSUAFJS0lABSUUUAFFFJQAUlLSUAFFF
        FACUUUUANp1FFABRRRQAUUUUAFLSUtABS0lLQAUtJRQAtFFFAC0UUUALS0lFAC0tJS0AOoptOoAWikpa
        ACnU2nUAFLSUUALxS0lLQIKKKKACiikoAWikooGGaSlpKBBTaKKBhRRRQAlNp1NoAKSlpKACkoooAKSl
        pKAEooooAKSlpKACkpaSgApKWkoAKKKKACim06gAoptFADqKKKAClpKWgApaSigBaKKKAFooooAWiiig
        BaKKKAFopKWgBadTKWgB1LSUUALRSZpaAHUU2nc0AFFFFAC0UlFAC0UlFAC0lFFABTaKKACiiigApKQ0
        tABTaKSgAoopKACiikoAKKKSgAooooASiiigApKKKACkpaSgAooooAbTqbTqAGmiiigB1FFFABRRRQAt
        FFFAC0UlLQAtFJS0AFLSUUALS0lFAC0tJRQAtLSUUALTqbRQA6lpKKAFooooAKKKKACiiigB1FNpc0AG
        aSlzSUAFFJzS0AFFJRQAhpKKKACkoooAKSiigApKKKACkoooAKKSigAoopKACiiigBKKKKACiiigAooo
        oAbRRRQA6im06gAooooAWikooAWlpKKAFooooAWiiigApaSloAKWkpaAClpKKAFpaSigBadTaKAHUnek
        ooAfSZoooAWikooAWikooAM0tJRQAUUU2gAoopKAFpKKKACkoooAKSiigApKWkoAKKKKACkoooAKSiig
        AoopKACiiigAooptABTqbRigAooooAKdTaKAHUUUUAFFFFAC0UUUALRSUtAC0UlLQAUtJRQAtFJRQA6i
        kpaAClpKKAFopKWgBaKSigBaKKKACnU2igB1NoooAKKKSgBaKSigAoopKAFpKKKACikooAKKKKAEoooo
        AKSiigAoopKACiiigBKKKKACiiigAptOptABTqbRQAUUUUAFFFFADqKbTqACiiigApaSloAKWkooAWii
        igBaKSloAKKKKAClpKWgBaKSigBaKSloAKWkooAWikooAWikooAWikpaACikooAWkoooAKKKSgBaSiig
        AoopKAFpKKKACiikoAKKKKACkoooAKSlpKACiiigAooooAbRRRQAUUUUAFFFFABRRRQAU6m0UAOooooA
        KKKKAClpKWgApaSigBaKSloAKWkpaACiiigApaSigBaKSloAKKKKAFopKKAFopKKAFopKKAFopKKAFpK
        KKACiikoAWkoooAKKKKACikooAKKKSgBaSiigAoopKACiiigAooooAKbRRQAUUUUAFFFFADnRkcqwwwO
        CPSm0UUAFFFFABRRRQAU6iigAooooAKKKKAFooooAKWiigAooooAKWiigAooooAKKKKACloooAKKKKAC
        iiigAooooAKSiigApaKKAEooooAKKKKACkoooAKKKKACkoooAKKKKACkoooAKKKKACiiigBtFFFABRRR
        QAVZXTrl0VlX5WGRyOlFFAH/2Q==
</value>
  </data>
</root>